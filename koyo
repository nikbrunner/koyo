#!/bin/bash

export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[1;33m'
export BLUE='\033[0;34m'
export CYAN='\033[0;36m'
export NC='\033[0m' # No Color

debug_log() {
    echo -e "${BLUE}DRY-RUN:${NC} $1"
}

prompt_log() {
    echo -e "${CYAN}$1${NC}"
}

warning_log() {
    echo -e "${YELLOW}$1${NC}"
}

success_log() {
    echo -e "${GREEN}$1${NC}"
}

# Enable strict mode
set -euo pipefail

# Debug flag handling
DEBUG=${DEBUG:-false}
export DEBUG # Export so child scripts can access it

# Get the real path to the script, following symlinks
REAL_SCRIPT_PATH="$(readlink -f "${BASH_SOURCE[0]}")"
PROJECT_DIR="$(dirname "$REAL_SCRIPT_PATH")"

show_help() {
    echo -e "${CYAN}Usage:${NC} koyo [-d|--debug] <command> [options]"
    echo ""
    echo -e "${CYAN}Options:${NC}"
    echo -e "  ${GREEN}-d, --debug${NC}     Enable debug output"
    echo ""
    echo -e "${CYAN}Commands:${NC}"
    echo -e "  ${GREEN}setup${NC}         - Setup Koyo environment"
    echo -e "    ${BLUE}--dry-run${NC}    Show what would be done without making changes"
    echo ""
    echo -e "${CYAN}Keyboard Commands:${NC}"
    echo -e "  ${GREEN}moonlander${NC}    - ZSA Moonlander commands"
    echo -e "  ${GREEN}crkbd${NC}         - Corne keyboard commands"
    echo -e "    ${BLUE}flash${NC}        - Flash the keyboard with current configuration"
    echo -e "    ${BLUE}help${NC}         - Show this help message"
    echo ""
    echo -e "${CYAN}Examples:${NC}"
    echo -e "  ${BLUE}koyo setup${NC}"
    echo -e "  ${BLUE}koyo setup --dry-run${NC}"
    echo -e "  ${BLUE}koyo moonlander flash${NC}"
    echo -e "  ${BLUE}koyo --debug moonlander flash${NC}"
    echo -e "  ${BLUE}koyo crkbd flash${NC}"
}

# Parse arguments
POSITIONAL_ARGS=()
while [[ $# -gt 0 ]]; do
    case $1 in
    -d | --debug)
        DEBUG=true
        shift
        ;;
    -h | --help)
        show_help
        exit 0
        ;;
    *)
        POSITIONAL_ARGS+=("$1")
        shift
        ;;
    esac
done

# Restore positional arguments
set -- "${POSITIONAL_ARGS[@]}"

# Check if we have enough arguments
if [ $# -lt 1 ]; then
    show_help
    exit 1
fi

# Get the keyboard
KEYBOARD=$1
COMMAND=""

# Check and get the command if provided
if [ $# -gt 1 ]; then
    COMMAND=$2
fi

# Debug output
if [[ "$DEBUG" == "true" ]]; then
    debug_log "Debug mode enabled"
    debug_log "Project directory: $PROJECT_DIR"
    debug_log "Keyboard: $KEYBOARD"
    debug_log "Command: $COMMAND"
fi

case $KEYBOARD in
"setup")
    if [ -n "$COMMAND" ] && [ "$COMMAND" != "--dry-run" ]; then
        error_log "Unknown option for setup: $COMMAND"
        show_help
        exit 1
    fi

    # Set DRY_RUN if --dry-run option is provided
    if [ "$COMMAND" = "--dry-run" ]; then
        export DRY_RUN=true
    else
        export DRY_RUN=false
    fi

    "$PROJECT_DIR/setup.sh"
    ;;

"moonlander")
    case $COMMAND in
    "flash")
        "$PROJECT_DIR/qmk/moonlander/flash.sh"
        ;;
    "help")
        show_help
        ;;
    *)
        error_log "Unknown command: $COMMAND"
        show_help
        exit 1
        ;;
    esac
    ;;

"crkbd")
    case $COMMAND in
    "flash")
        "$PROJECT_DIR/qmk/crkbd/flash.sh"
        ;;
    "help")
        show_help
        ;;
    *)
        error_log "Unknown command: $COMMAND"
        show_help
        exit 1
        ;;
    esac
    ;;

"help")
    show_help
    ;;
*)
    error_log "Unknown keyboard: $KEYBOARD"
    show_help
    exit 1
    ;;
esac
